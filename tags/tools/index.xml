<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tools on FunForever</title>
    <link>http://yl4869.github.io/tags/tools/</link>
    <description>Recent content in Tools on FunForever</description>
    <generator>Hugo -- 0.140.2</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 22 Jan 2022 23:33:15 +0800</lastBuildDate>
    <atom:link href="http://yl4869.github.io/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>各种资源网站分享</title>
      <link>http://yl4869.github.io/posts/day_day_up/</link>
      <pubDate>Sat, 22 Jan 2022 23:33:15 +0800</pubDate>
      <guid>http://yl4869.github.io/posts/day_day_up/</guid>
      <description>&lt;p&gt;整理了一些平时优质的学习网站，做出分享，长期更新。&lt;/p&gt;
&lt;h2 id=&#34;各种工具类&#34;&gt;各种工具类&lt;/h2&gt;
&lt;h3 id=&#34;一个全栈工程师的工具箱&#34;&gt;一个全栈工程师的工具箱&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://toolbox.phodal.com/&#34;&gt;http://toolbox.phodal.com/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;顾名思义，从文档到工具到外设，在无聊的时候可以随意看一看，说不定就找到了提升自己生产力的工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;cpu仿真器&#34;&gt;CPU仿真器&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://cpulator.01xz.net/&#34;&gt;https://cpulator.01xz.net/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;支持Nios II, ARMv7和Mips的处理器仿真。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;latex&#34;&gt;LaTex&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.overleaf.com/&#34;&gt;https://www.overleaf.com/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LaTex在线编辑工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;godbolt&#34;&gt;godbolt&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://godbolt.org/&#34;&gt;https://godbolt.org/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;高级语言到汇编的在线转换工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;fpga&#34;&gt;FPGA&lt;/h2&gt;
&lt;h3 id=&#34;fpga使用笔记&#34;&gt;FPGA使用笔记&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.kancloud.cn/dlover/fpga&#34;&gt;https://www.kancloud.cn/dlover/fpga&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;记录了作者学习FPGA时的各种积累，适合新手学习。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;使用json绘制波形&#34;&gt;使用json绘制波形&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://wavedrom.com/editor.html&#34;&gt;https://wavedrom.com/editor.html&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以通过编写json绘制好看的波形图&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;机器学习&#34;&gt;机器学习&lt;/h2&gt;
&lt;h3 id=&#34;机器学习数据寻找&#34;&gt;机器学习数据寻找&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/342295029/answer/846359794&#34;&gt;https://www.zhihu.com/question/342295029/answer/846359794&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;画出美观的神经网络&#34;&gt;画出美观的神经网络&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://alexlenail.me/NN-SVG/LeNet.html&#34;&gt;http://alexlenail.me/NN-SVG/LeNet.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;前端&#34;&gt;前端&lt;/h2&gt;
&lt;h3 id=&#34;前端背景&#34;&gt;前端背景&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.pexels.com/zh-cn/&#34;&gt;https://www.pexels.com/zh-cn/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;免费高清矢量图片&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>上手正则表达式(一)</title>
      <link>http://yl4869.github.io/posts/regularexpressionin/first/</link>
      <pubDate>Mon, 17 Jan 2022 15:18:16 +0800</pubDate>
      <guid>http://yl4869.github.io/posts/regularexpressionin/first/</guid>
      <description>&lt;h1 id=&#34;引言&#34;&gt;引言&lt;/h1&gt;
&lt;p&gt;在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的需要。正则表达式就是用于描述这些规则的工具。换句话说，正则表达式就是记录文本规则的代码。&lt;/p&gt;
&lt;p&gt;与通配符(如*)类似，正则表达式也是用来进行文本匹配的工具，不过他要更为精确和复杂。学习正则表达式的最好办法就是利用例子学习。&lt;/p&gt;
&lt;h2 id=&#34;元字符&#34;&gt;元字符&lt;/h2&gt;
&lt;p&gt;现在考虑从英文小说里查找hi，你可以使用正则表达式&lt;code&gt;hi&lt;/code&gt;,但这样的代价是你会查找到文本中所有有hi的位置,而不是一个单词。为了查找到一个单词你可以使用&lt;code&gt;\bhi\b&lt;/code&gt;,他会帮你匹配单词hi存在的位置。&lt;/p&gt;
&lt;p&gt;\b是正则表达式中元字符(metacharacter),代表单词的分界处，但请注意\b并&lt;strong&gt;不匹配用来分界单词的字符(如空格，标点或者换行符)，他匹配的是一个位置&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;更为精确的说法是：\b匹配一个前一个字符和后一个字符不全是\w的位置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样的元字符在正则表达式中有很多，他们帮助构建了正则表达式强大的匹配能力。你不需要全部记住，可以在使用中进行查阅，并在实践中掌握他们。&lt;/p&gt;
&lt;p&gt;如果你要寻找这样的一个字符串：A单词后面跟着一个B单词，AB中间可以有任意字符存在。可以使用&lt;code&gt;\bA\b.*\bB\b&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这里的&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;\*&lt;/code&gt;也是两个其他的元字符。&lt;code&gt;.&lt;/code&gt;可以匹配除了换行符之外的任何字符，而&lt;code&gt;*&lt;/code&gt;比较特殊，他使得前面的内容可以&lt;strong&gt;连续重复使用任意次来匹配字符串&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你学过离散数学或者计算理论，应该对*不会太过陌生(尤其是学过计算理论)，之后你还会看到&lt;code&gt;+&lt;/code&gt;元字符，他们的区别和你在离散数学中他们的区别相同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;下面给出常见的元字符和使用他们的一些例子&#34;&gt;下面给出常见的元字符，和使用他们的一些例子&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;元字符&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;.&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;匹配除换行符以外的任意字符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\w&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;匹配字母或数字或下划线或汉字&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\s&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;匹配任意的空白符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\d&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;匹配数字&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\b&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;匹配单词的开始或结束&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;^&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;匹配字符串的开始&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;$&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;匹配字符串的结束&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;现在我们可以回顾一下\b的精确描述，理解\w的存在。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;例子&#34;&gt;例子&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;\ba\w+\b&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;匹配以字母a开头的单词——先是某个单词开始处(\b)，然后是字母 a，然后中间至少有一个字母或者数字(\w+)，最后是单词结束处(\b)。&lt;strong&gt;用到了\w与+的共同使用&lt;/strong&gt;,*可以有0，但+至少一个。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\b\w{6}\b&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;匹配刚好六个字符的单词&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;^\d{5,12}$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;^ 和 $保证了是整个字符串的匹配，而不是字串，{5，12}代表重复的次数不能少于5次，不能多于12次，否则都不匹配。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
